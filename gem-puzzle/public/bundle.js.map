{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/addition.js","webpack:///./src/blocks/capitulate.js","webpack:///./src/blocks/cell.js","webpack:///./src/blocks/difficulty.js","webpack:///./src/blocks/field.js","webpack:///./src/blocks/level.js","webpack:///./src/blocks/load.js","webpack:///./src/blocks/newgame.js","webpack:///./src/blocks/radiobtn.js","webpack:///./src/blocks/restart.js","webpack:///./src/blocks/save.js","webpack:///./src/blocks/sound.js","webpack:///./src/main.js","webpack:///./src/utils/create.js","webpack:///./src/utils/storage.js"],"names":[],"mappings":"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CA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,mBAAmB,6DAAG;AACtB,qBAAqB,6DAAG;AACxB;AACA;AACA;AACA;AACA,2BAA2B,gDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;AACP;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,2BAA2B,gDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;AAC/D,kDAAkD,SAAS;AAC3D,wBAAwB,yDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACtNA;AAAA;AAAA;AAAA;AAAA;AACwC;AACC;;AAE1B;AACf;AACA,cAAc,gEAAM;AACpB;;AAEA;;AAEA,oBAAoB,sDAAU;;AAE9B,GAAG;AACH;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AACwC;AACT;AAKH;;;;AAIb;AACf;AACA,cAAc,gEAAM;;AAEpB;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACwC;AACT;AACA;;AAEhB;AACf;AACA,cAAc,gEAAM;;AAEpB;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AACwC;;AAEzB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAM,sBAAsB,WAAW;AACxD,iBAAiB,gEAAM;AACvB,gBAAgB,gEAAM;AACtB;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACwC;AACT;AACA;;;AAGhB;AACf;AACA,cAAc,gEAAM;;AAEpB;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AACwC;AACT;AAKH;;;AAGb;AACf;AACA,cAAc,gEAAM;;AAEpB;AACA,IAAI,6DAAG;AACP,IAAI,6DAAG;AACP,GAAG;AACH;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AACwC;;AAExC;;AAEA;AACA;AACA,cAAc,gEAAM;;AAEpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAKE;;;;;;;;;;;;;AC3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACsC;AACC;AACM;AACA;AACM;AACJ;AACD;AACE;;AAEhD;AACA;;AAEA,aAAa,gEAAM,aAAa,gEAAM;AACtC;;AAEA,kBAAkB,gEAAM;;AAExB,gBAAgB,wDAAK;;AAErB,gBAAgB,gEAAM;AACtB,kEAAU;AACV,kEAAU;AACV,qEAAa;AACb,mEAAW;;;AAGX;;AAEA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,SAAS;AACrB;;AAEe;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,kEAAkE;;AAElE;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport btnSave from './save.js';\nimport btnLoad from './load.js';\nimport btnLevel from './level.js';\nimport {btnSound, isSound} from './sound.js';\n\n\nexport default function btnAddition(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'плюшки', buttons, ['type', 'button']);\n  let isOpenAdds = false\n\n  btn.addEventListener('click', () => {\n\n    if (!isOpenAdds) {\n      btnSave(field);\n      btnLoad(field);\n      btnLevel(field);\n      btnSound();\n      isOpenAdds = !isOpenAdds\n    } else {\n      isOpenAdds = !isOpenAdds\n      for (let i = 0; i < 4; i++) {\n        buttons.removeChild(buttons.lastChild)\n      }\n    }\n  });\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport field from '../main.js';\n\n\nexport default function capitulate(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'сдаюсь', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    console.log('я еще не работаю, я маленькая')\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\n\nexport default class Cell {\n  constructor(inner, parent, top, left) {\n    this.inner = inner;\n    this.top = top;\n    this.left = left;\n    this.cell = create('div', 'cell', `${inner}`, parent);\n    this.cell.style.gridColumnStart = `${this.left}`;\n    this.cell.style.gridRowStart = `${this.top}`;\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/extensions */\n\nimport create from '../utils/create.js';\nimport RadioInput from './radiobtn.js';\nimport Field from './field.js';\n\n\nexport default class Difficulty {\n  constructor(field) {\n    this.main = document.querySelector('main');\n    this.field = field;\n  }\n\n  init() {\n    this.popup = create('div', 'dark-screen', create('div', 'popup', create('h2', 'title', 'Выбор сложности')), this.main)\n    this.level = create('form', 'level-kind', create('div', 'form-wrap'), null, ['method', 'GET'])\n    this.popup.firstChild.appendChild(this.level)\n\n    for (let i = 0; i < 6; i++) {\n      let item = new RadioInput('radio', 'lavel', i + 3, 'input input-level', `${i+3} x ${i+3}`, this.level)\n      item.span.classList.add('radio-level')\n      item.input.setAttribute('checked', true)\n      this.level.firstChild.appendChild(item.label)\n    }\n\n    this.level.appendChild(create('div', 'form-wrap'))\n    let item1 = new RadioInput('radio', 'kind', 'kind-img', 'input input-kind', 'картинки', this.level)\n    item1.span.classList.add('radio-kind')\n    item1.label.classList.add('label-kind')\n    item1.input.setAttribute('checked', true)\n    this.level.lastChild.appendChild(item1.label)\n\n    let item2 = new RadioInput('radio', 'kind', 'kind-digit', 'input input-kind', 'цифры', this.level)\n    item2.span.classList.add('radio-kind')\n    item2.label.classList.add('label-kind')\n    item2.input.setAttribute('checked', true)\n    this.level.lastChild.appendChild(item2.label)\n\n    let item3 = new RadioInput('radio', 'kind', 'kind-both', 'input input-kind', 'картинки и цифры', this.level)\n    item3.span.classList.add('radio-kind')\n    item3.label.classList.add('label-kind')\n    item3.input.setAttribute('checked', true)\n    this.level.lastChild.appendChild(item3.label)\n\n    // let btnsubmit = create('button', 'btn popup-btn', 'применить', this.level, ['type', 'submit'])\n\n    let btnsubmit = create('button', 'btn popup-btn', 'применить', this.level, ['type', 'button'])\n    this.level.appendChild(btnsubmit)\n\n    let btnclose = create('button', 'close-btn', create('span', 'visually-hidden', close), null, ['type', 'button'])\n    this.popup.firstChild.appendChild(btnclose)\n\n\n    let check = document.querySelectorAll('.input-level');\n    let check2 = document.querySelectorAll('.input-kind');\n    let level = 8;\n    let kind = 'kind-both';\n\n\n    for (let i = 0; i < check.length; i++) {\n      check[i].addEventListener('click', function (event) {\n        level = check[i].value\n      });\n    }\n    for (let i = 0; i < check2.length; i++) {\n      check2[i].addEventListener('click', function (event) {\n        kind = check2[i].value\n      });\n    }\n\n    function closePopup(popup) {\n      popup.remove()\n    }\n\n    console.log(this.field)\n\n\n    btnsubmit.addEventListener('click', () => {\n      console.log(this.field)\n      this.field.delete()\n      this.field.init(level);\n      this.field.draw(true);\n      closePopup(this.popup)\n    })\n\n    btnclose.addEventListener('click', () => {\n      closePopup(this.popup)\n    })\n\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/extensions */\n\nimport create from '../utils/create.js';\nimport Cell from './cell.js';\nimport {\n  btnSound,\n  isSound\n} from './sound.js';\n\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js'\n\n\nexport default class Field {\n  constructor(size = 4) {\n    this.size = size;\n    this.wrap = document.querySelector('.field-wrap');\n    this.stepsCounter = 0;\n    this.timeCounter = 0;\n    this.timerStop = '';\n    this.GameSave = [];\n    this.steps = create('div', 'steps', `${this.stepsCounter} шагов`)\n    this.time = create('div', 'times', `${this.timeCounter}`)\n    this.score = create('div', 'score', [create('div', 'record', 'рекорды'), this.steps, this.time], this.wrap);\n    this.field = create('div', 'field', null, this.wrap);\n    this.load = false;\n    this.empty = {\n      value: this.size * this.size,\n      left: this.size,\n      top: this.size\n    }\n  }\n\n  init(size) {\n    this.size = size || this.size;\n    this.field.style.gridTemplateColumns = `repeat(${this.size}, 1fr)`;\n    this.field.style.gridTemplateRows = `repeat(${this.size}, 1fr)`;\n\n    return this;\n  }\n\n  generate() {\n    let countCell = this.size * this.size;\n    const numbers = [...Array(countCell - 1).keys()]\n      .map(x => x + 1)\n      .sort(() => Math.random() - 0.5)\n    localStorage.setItem('currentGame', numbers);\n\n    return numbers\n  }\n\n  step() {\n    this.stepsCounter++\n    this.steps.textContent = `${this.stepsCounter} шагов`;\n  }\n\n  timer() {\n    this.timeCounter++\n    let sec = this.timeCounter % 60\n    let min = Math.floor(this.timeCounter / 60)\n    this.time.textContent = `${min} : ${sec}`\n  }\n\n  winner() {\n    let name = prompt('вы победили! \\n введите имя:');\n    let winner = {\n      winName: name,\n      winLevel: this.size,\n      winStep: this.stepsCounter,\n      winTime: this.timeCounter\n    }\n    let record = get('records')\n    if (record === null) {\n      record = [winner];\n    } else {\n      record.push(winner);\n    }\n    set('records', record);\n  }\n\n  draw(isNew) {\n    this.steps.textContent = `${this.stepsCounter} шагов`;\n    let isWinner = false;\n    let countCell = this.size * this.size;\n    let numbers;\n    this.empty = {\n      value: this.size * this.size,\n      left: this.size,\n      top: this.size\n   }\n    this.cells = [];\n\n    if (isNew) {\n      numbers = this.generate();\n      for (let i = 0; i < countCell - 1; i++) {\n        const left = i % this.size + 1;\n        const top = Math.ceil((i + 1) / this.size);\n        const value = numbers[i];\n        const cell = new Cell(value, this.field, top, left);\n        this.cells.push({\n          value: value,\n          left: left,\n          top: top,\n          element: this.field.lastChild\n        });\n      }\n    } else {\n      if (this.load) {\n        let save = get('longGame');\n        this.empty = get('empty');\n        save.forEach((item) => {\n          const left = item.left;\n          const top = item.top;\n          const value = item.value;\n          const cell = new Cell(value, this.field, top, left);\n          this.cells.push({\n            value: value,\n            left: left,\n            top: top,\n            element: this.field.lastChild\n          });\n        })\n        this.load = false;\n      } else {\n        numbers = localStorage.getItem('currentGame').split(',')\n        for (let i = 0; i < countCell - 1; i++) {\n          const left = i % this.size + 1;\n          const top = Math.ceil((i + 1) / this.size);\n          const value = numbers[i];\n          const cell = new Cell(value, this.field, top, left);\n          this.cells.push({\n            value: value,\n            left: left,\n            top: top,\n            element: this.field.lastChild\n          });\n        }\n      }\n\n    }\n\n\n\n\n    const move = (item) => {\n      const leftDiff = Math.abs(this.empty.left - item.left);\n      const topDiff = Math.abs(this.empty.top - item.top);\n      const cellMoved = item;\n      let countRight = 0;\n\n\n      if (leftDiff + topDiff > 1) {\n        return;\n      } else {\n        const emptyLeft = this.empty.left;\n        const emptyTop = this.empty.top;\n        this.empty.left = cellMoved.left;\n        this.empty.top = cellMoved.top;\n        cellMoved.left = emptyLeft;\n        cellMoved.top = emptyTop;\n        cellMoved.element.style.gridColumnStart = `${emptyLeft}`;\n        cellMoved.element.style.gridRowStart = `${emptyTop}`;\n        let isSoundOn = isSound();\n        if (isSoundOn) {\n          const audio = document.querySelector('.audio');\n          audio.currentTime = 0;\n          audio.play();\n        }\n      }\n\n      for (let i = 0; i < countCell - 1; i++) {\n        let position = (this.cells[i].top - 1) * this.size + this.cells[i].left;\n        if (position === this.cells[i].value) {\n          countRight++;\n          this.cells[i].element.style.opacity = '0.8'\n        } else {\n          this.cells[i].element.style.opacity = '1'\n        }\n        if (countRight === countCell - 1) {\n          this.cells.forEach(el => el.element.style.opacity = '0.1')\n          clearInterval(this.timerStop);\n          isWinner = true;\n        }\n      }\n      this.step();\n\n      console.log(this.cells[5].element)\n    }\n\n    this.cells.forEach(item => item.element.addEventListener('click', () => {\n      move(item);\n      if (isWinner) {\n        this.winner();\n      }\n    }));\n\n    this.timerStop = setInterval(() => {\n      this.timer();\n    }, 1000)\n  }\n\n  delete() {\n    this.stepsCounter = 0;\n    this.timeCounter = 0;\n    clearInterval(this.timerStop);\n    while (this.field.firstChild) {\n      this.field.removeChild(this.field.firstChild)\n    }\n  }\n\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Difficulty from './difficulty.js';\n\nexport default function btnlevel(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'уровень', buttons, ['type', 'button']);\n  const main = document.querySelector('main')\n\n  btn.addEventListener('click', () => {\n\n    let popup = new Difficulty(field).init()\n\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js'\n\n\n\nexport default function btnLoad(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'загрузить', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    field.load = true;\n    field.delete()\n    field.draw(false);\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport field from '../main.js';\n\nexport default function btnNewGame(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntNewGame btn', 'новая', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n\n    field.delete()\n    field.draw(true);\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\n\nexport default class RadioInput {\n  constructor(type, name, value, classname, inner, parent) {\n    this.inner = inner;\n    this.name = name;\n    this.value = value;\n    this.type = type;\n    this.classmame = classname;\n    this.parent = parent;\n    this.label = create('label', 'label', `${this.inner}`);\n    this.input = create('input', this.classmame, null, this.label, ['name', this.name], ['type', this.type], ['value', this.value]);\n    this.span = create('span', 'radio', null, this.label)\n  }\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport field from '../main.js';\n\n\nexport default function restart(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntRestart btn', 'повторить', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    field.delete()\n    field.draw(false);\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js'\n\n\nexport default function btnSave(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'сохранить', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    set('longGame', field.cells)\n    set('empty', field.empty)\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\n\nlet sound = true;\n\nfunction btnSound() {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntSound btn', 'звук выкл', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    if (sound) {\n      sound = !sound;\n      btn.textContent = 'звук вкл'\n    } else {\n      sound = !sound;\n      btn.textContent = 'звук выкл'\n    }\n  })\n}\n\nfunction isSound() {\n  return sound;\n}\n\nexport {\n  btnSound,\n  isSound\n};\n","/* eslint-disable import/extensions */\nimport Field from './blocks/field.js';\nimport create from './utils/create.js';\nimport btnNewGame from './blocks/newgame.js';\nimport btnRestart from './blocks/restart.js';\nimport btnCapitulate from './blocks/capitulate.js';\nimport btnAddition from './blocks/addition.js';\nimport RadioInput from './blocks/radiobtn.js';\nimport Difficulty from './blocks/difficulty.js';\n\nconst START_SIZE = 4;\nconst isNew = true\n\nconst main = create('main', '', create('h1', 'title', 'Gem Puzzle'));\ndocument.body.prepend(main);\n\nconst fieldWrap = create('div', 'field-wrap', null, main);\n\nlet field = new Field(START_SIZE);\n\nconst buttons = create('div', 'buttons', null, main);\nbtnNewGame(field);\nbtnRestart(field);\nbtnCapitulate(field)\nbtnAddition(field)\n\n\nmain.append(fieldWrap);\n\nfield.init();\nfield.draw(isNew);\n","/**\n * @param {String} el\n * @param {String} classNames\n * @param {HTMLElement} child\n * @param {HTMLElement} parent\n * @param  {...array} dataAttr\n */\n\nexport default function create(el, classNames, child, parent, ...dataAttr) {\n  let element = null;\n  try {\n    element = document.createElement(el);\n  } catch (error) {\n    throw new Error('Unable to create HTMLElement! Give a proper tag name');\n  }\n\n  if (classNames) element.classList.add(...classNames.split(' ')); // \"class1 class2 class3\"\n\n  if (child && Array.isArray(child)) {\n    child.forEach((childElement) => childElement && element.appendChild(childElement));\n  } else if (child && typeof child === 'object') {\n    element.appendChild(child);\n  } else if (child && typeof child === 'string') {\n    element.innerHTML = child;\n  }\n\n  if (parent) {\n    parent.appendChild(element);\n  }\n\n  if (dataAttr.length) {\n    dataAttr.forEach(([attrName, attrValue]) => {\n      if (attrValue === '') {\n        element.setAttribute(attrName, '');\n      }\n      if (attrName.match(/value|id|type|name|placeholder|cols|rows|autocorrect|spellcheck/)) {\n        element.setAttribute(attrName, attrValue);\n      } else {\n        element.dataset[attrName] = attrValue;\n      }\n    });\n  }\n  return element;\n}\n","export function set(name, value) {\n  window.localStorage.setItem(name, JSON.stringify(value));\n}\n\nexport function get(name, subst = null) {\n  return JSON.parse(window.localStorage.getItem(name) || subst);\n}\n\nexport function del(name) {\n  localStorage.removeItem(name);\n}\n"],"sourceRoot":""}