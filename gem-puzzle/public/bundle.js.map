{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/addition.js","webpack:///./src/blocks/ascname.js","webpack:///./src/blocks/capitulate.js","webpack:///./src/blocks/cell.js","webpack:///./src/blocks/difficulty.js","webpack:///./src/blocks/field.js","webpack:///./src/blocks/level.js","webpack:///./src/blocks/load.js","webpack:///./src/blocks/newgame.js","webpack:///./src/blocks/radiobtn.js","webpack:///./src/blocks/restart.js","webpack:///./src/blocks/save.js","webpack:///./src/blocks/sortrecords.js","webpack:///./src/blocks/sound.js","webpack:///./src/main.js","webpack:///./src/utils/create.js","webpack:///./src/utils/storage.js"],"names":[],"mappings":"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A;AACA;AACA,iBAAiB,gEAAM,oBAAoB,kBAAkB;AAC7D,gBAAgB,gEAAM,oBAAoB,iBAAiB;AAC3D,kBAAkB,gEAAM;AACxB,iBAAiB,gEAAM;AACvB,iBAAiB,gEAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAM;AAC3B;AACA;AACA,yCAAyC,kCAAkC;AAC3E;;AAEA;AACA;AACA,qDAAqD,UAAU;AAC/D,kDAAkD,UAAU;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,gCAAgC,kBAAkB,GAAG,KAAK;AAC1D;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,IAAI,KAAK,IAAI;AAC5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAO;;AAEX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL,8CAA8C,gBAAgB;AAC9D,2CAA2C,eAAe;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,UAAU;AACxD,2CAA2C,SAAS;AACpD,sBAAsB,yDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA,qBAAqB,mBAAmB;AACxC;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,KAAK;AACL;;AAEA;AACA,gCAAgC,kBAAkB;AAClD;AACA,yCAAyC,kCAAkC;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,yBAAyB,gDAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,mBAAmB,6DAAG;AACtB,sBAAsB,6DAAG;AACzB;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,qBAAqB,6DAAG;AACxB;AACA;AACA;AACA;AACA,2BAA2B,gDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET,OAAO;AACP;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,2BAA2B,gDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,6DAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA,4DAA4D,4BAA4B,IAAI,wCAAwC;AACpI;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;AAC/D,kDAAkD,SAAS;AAC3D;AACA;AACA,wBAAwB,yDAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAC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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport btnSave from './save.js';\nimport btnLoad from './load.js';\nimport btnLevel from './level.js';\nimport {btnSound, isSound} from './sound.js';\n\n\nexport default function btnAddition(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'плюшки', buttons, ['type', 'button']);\n  let isOpenAdds = false\n\n  btn.addEventListener('click', () => {\n\n    if (!isOpenAdds) {\n      btnSave(field);\n      btnLoad(field);\n      btnLevel(field);\n      btnSound();\n      isOpenAdds = !isOpenAdds\n    } else {\n      isOpenAdds = !isOpenAdds\n      for (let i = 0; i < 4; i++) {\n        buttons.removeChild(buttons.lastChild)\n      }\n    }\n  });\n}\n","import create from '../utils/create';\nimport Field from './field.js';\nimport sortrecords from './sortrecords.js';\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js';\n\nexport default function ascname(winner) {\n\n  const main = document.querySelector('main');\n  const popup = create('div', 'dark-screen', create('div', 'popup-winner', create('h2', 'title', 'Ура-ура-ура!!!')), main)\n  const winLevel = create('h3', 'win-score', `Вы решили головоломку ${winner.winLevel} х ${winner.winLevel}`, popup)\n  let sec = winner.winTime % 60\n  let min = Math.floor(winner.winTime / 60)\n\n  let step;\n  let lastnumber = String(winner.winStep).slice(-1)\n  let last2number = String(winner.winStep).slice(-2, 1)\n  if (lastnumber === '1' && last2number !== '1') {\n    step = 'шаг'\n  } else if ((lastnumber === '2' || lastnumber === '3' || lastnumber === '4') && last2number !== '1') {\n    step = 'шага'\n  } else {\n    step = 'шагов'\n  }\n\n  const winStepTime = create('h3', 'win-score', `за ${winner.winStep} ${step} и ${min} : ${sec}`, popup);\n\n  popup.firstChild.append(winLevel);\n  popup.firstChild.append(winStepTime);\n\n  let btnclose = create('button', 'close-btn', create('span', 'visually-hidden', close), null, ['type', 'button']);\n  popup.firstChild.append(btnclose);\n  const nameLabel = create('label', 'name_label');\n  const nameInput = create('input', 'name_input', null, nameLabel, ['type', 'text'], ['placeholder', 'Введите имя']);\n  const nameText = create('span', 'name_text hidden', null, nameLabel);\n  popup.firstChild.append(nameLabel);\n\n\n  function closePopup(popup) {\n    popup.remove();\n  }\n\n  btnclose.addEventListener('click', () => {\n    closePopup(popup);\n  });\n\n  function clearName() {\n    nameInput.setAttribute('placeholder', '')\n  }\n\n  function setName(el) {\n    if (el.type === 'keypress') {\n      if (el.keyCode === 13) {\n        nameText.innerText = nameInput.value\n        nameInput.classList.add('hidden')\n        nameText.classList.remove('hidden')\n        nameInput.blur()\n        winner.winName = nameInput.value;\n\n        let record = get('records')\n        if (record === null) {\n          record = [winner];\n        } else {\n          record.push(winner);\n        }\n\n        set('records', record);\n      }\n    }\n  }\n\n  nameInput.addEventListener('click', clearName);\n  nameInput.addEventListener('keypress', setName)\n}\n\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport field from '../main.js';\n\n\nexport default function capitulate(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'сдаюсь', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    console.log('я еще не работаю, я маленькая')\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\n\nexport default class Cell {\n  constructor(inner, parent, top, left) {\n    this.inner = inner;\n    this.top = top;\n    this.left = left;\n    this.cell = create('div', 'cell', `${inner}`, parent);\n    this.cell.style.gridColumnStart = `${this.left}`;\n    this.cell.style.gridRowStart = `${this.top}`;\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/extensions */\n\nimport create from '../utils/create.js';\nimport RadioInput from './radiobtn.js';\nimport Field from './field.js';\n\n\nexport default class Difficulty {\n  constructor(field) {\n    this.main = document.querySelector('main');\n    this.field = field;\n  }\n\n  init() {\n    this.popup = create('div', 'dark-screen', create('div', 'popup', create('h2', 'title', 'Выбор сложности')), this.main)\n    this.level = create('form', 'level-kind', create('div', 'form-wrap'), null, ['method', 'GET'])\n    this.popup.firstChild.appendChild(this.level)\n\n    for (let i = 0; i < 6; i++) {\n      let item = new RadioInput('radio', 'lavel', i + 3, 'input input-level', `${i+3} x ${i+3}`, this.level)\n      item.span.classList.add('radio-level')\n      item.input.setAttribute('checked', true)\n      this.level.firstChild.appendChild(item.label)\n    }\n\n    this.level.appendChild(create('div', 'form-wrap'))\n    let item1 = new RadioInput('radio', 'kind', 'kind-img', 'input input-kind', 'картинки', this.level)\n    item1.span.classList.add('radio-kind')\n    item1.label.classList.add('label-kind')\n    item1.input.setAttribute('checked', true)\n    this.level.lastChild.appendChild(item1.label)\n\n    let item2 = new RadioInput('radio', 'kind', 'kind-digit', 'input input-kind', 'цифры', this.level)\n    item2.span.classList.add('radio-kind')\n    item2.label.classList.add('label-kind')\n    item2.input.setAttribute('checked', true)\n    this.level.lastChild.appendChild(item2.label)\n\n    let item3 = new RadioInput('radio', 'kind', 'kind-both', 'input input-kind', 'картинки и цифры', this.level)\n    item3.span.classList.add('radio-kind')\n    item3.label.classList.add('label-kind')\n    item3.input.setAttribute('checked', true)\n    this.level.lastChild.appendChild(item3.label)\n\n    // let btnsubmit = create('button', 'btn popup-btn', 'применить', this.level, ['type', 'submit'])\n\n    let btnsubmit = create('button', 'btn popup-btn', 'применить', this.level, ['type', 'button'])\n    this.level.appendChild(btnsubmit)\n\n    let btnclose = create('button', 'close-btn', create('span', 'visually-hidden', close), null, ['type', 'button'])\n    this.popup.firstChild.appendChild(btnclose)\n\n\n    let check = document.querySelectorAll('.input-level');\n    let check2 = document.querySelectorAll('.input-kind');\n    let level = 8;\n    let kind = 'kind-both';\n\n\n    for (let i = 0; i < check.length; i++) {\n      check[i].addEventListener('click', function (event) {\n        level = check[i].value;\n      });\n    }\n    for (let i = 0; i < check2.length; i++) {\n      check2[i].addEventListener('click', function (event) {\n        kind = check2[i].value;\n      });\n    }\n\n    function closePopup(popup) {\n      popup.remove();\n    }\n\n    btnsubmit.addEventListener('click', () => {\n      this.field.kind = kind;\n      this.field.delete();\n      this.field.init(level);\n      this.field.draw(true);\n      closePopup(this.popup);\n    })\n\n    btnclose.addEventListener('click', () => {\n      closePopup(this.popup);\n    })\n\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/extensions */\n\nimport create from '../utils/create.js';\nimport ascname from './ascname.js';\nimport Cell from './cell.js';\nimport sortrecords from './sortrecords.js'\nimport {\n  btnSound,\n  isSound\n} from './sound.js';\n\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js'\n\n\nexport default class Field {\n  constructor(size = 4) {\n    this.size = size;\n    this.wrap = document.querySelector('.field-wrap');\n    this.stepsCounter = 0;\n    this.timeCounter = 0;\n    this.timerStop = '';\n    this.GameSave = [];\n    this.steps = create('div', 'steps', `${this.stepsCounter} шагов`);\n    this.time = create('div', 'times', `${this.timeCounter}`);\n    this.record = create('div', 'record', 'рекорды');\n    this.score = create('div', 'score', [this.record, this.steps, this.time], this.wrap);\n    this.field = create('div', 'field', null, this.wrap);\n    this.load = false;\n    this.empty = {\n      value: this.size * this.size,\n      left: this.size,\n      top: this.size\n    };\n    this.emptyCell = create('div', 'empty', null, this.field);\n    this.numbers = [];\n    this.kind = 'kind-digit';\n    this.backgroundImage = `url(images/${Math.floor(1 + Math.random() * 8)}.jpg)`;\n  }\n\n  init(size) {\n    this.size = size || this.size;\n    this.field.style.gridTemplateColumns = `repeat(${this.size}, 1fr)`;\n    this.field.style.gridTemplateRows = `repeat(${this.size}, 1fr)`;\n\n    return this;\n  }\n\n  generate() {\n    let countCell = this.size * this.size;\n    const numbers = [...Array(countCell - 1).keys()]\n      .map(x => x + 1)\n      .sort(() => Math.random() - 0.5)\n    localStorage.setItem('currentGame', numbers);\n\n    const solvedCounter = (arr) => {\n      let dlina = arr.length;\n      let counter = 0;\n      for (let i = 0; i < dlina; i++) {\n        let a = arr[i];\n        for (let j = i + 1; j < dlina - i; j++) {\n          if (arr[j] < a) {\n            counter++;\n          }\n        }\n      }\n      return counter;\n    };\n\n    if (solvedCounter(numbers) % 2 === 0) {\n      this.numbers = numbers;\n    } else {\n      this.generate();\n    }\n\n    this.numbers = numbers;\n\n\n  }\n\n  step() {\n    this.stepsCounter++;\n    let step = '';\n    let lastnumber = String(this.stepsCounter).slice(-1);\n    let last2number = String(this.stepsCounter).slice(-2, 1);\n    if (lastnumber === '1' && last2number !== '1') {\n      step = 'шаг';\n    } else if ((lastnumber === '2' || lastnumber === '3' || lastnumber === '4') && last2number !== '1') {\n      step = 'шага';\n    } else {\n      step = 'шагов';\n    }\n    this.steps.textContent = `${this.stepsCounter} ${step}`;\n  }\n\n  timer() {\n    this.timeCounter++;\n    let sec = this.timeCounter % 60;\n    let min = Math.floor(this.timeCounter / 60);\n    this.time.textContent = `${min} : ${sec}`;\n  }\n\n  winner() {\n\n    let winnerScore = {\n      winName: 'какой-то мужик',\n      winLevel: this.size,\n      winStep: this.stepsCounter,\n      winTime: this.timeCounter\n    }\n    ascname(winnerScore);\n\n  }\n\n  setDraggable() {\n    this.cells.forEach((item) => {\n      const leftDiff = Math.abs(this.empty.left - item.left);\n      const topDiff = Math.abs(this.empty.top - item.top);\n\n      if (leftDiff + topDiff > 1) {\n        item.element.removeAttribute('draggable');\n      } else {\n        item.element.setAttribute('draggable', true);\n      }\n    });\n\n    this.emptyCell.style.gridColumnStart = `${this.empty.left}`;\n    this.emptyCell.style.gridRowStart = `${this.empty.top}`;\n  }\n\n  dragDrop(item) {\n    let countCell = this.size * this.size;\n    const drop = () => {\n      const emptyLeft = this.empty.left;\n      const emptyTop = this.empty.top;\n      this.empty.left = item.left;\n      this.empty.top = item.top;\n      let countRight = 0;\n\n      item.left = emptyLeft;\n      item.top = emptyTop;\n      item.element.style.gridColumnStart = `${emptyLeft}`;\n      item.element.style.gridRowStart = `${emptyTop}`;\n      let isSoundOn = isSound();\n      if (isSoundOn) {\n        const audio = document.querySelector('.audio');\n        audio.currentTime = 0;\n        audio.play();\n      }\n      this.cells.forEach((el) => {\n        el.element.removeAttribute('draggable')\n      });\n      this.emptyCell.removeEventListener(`drop`, drop);\n      this.setDraggable();\n\n\n      for (let i = 0; i < countCell - 1; i++) {\n        let position = (this.cells[i].top - 1) * this.size + this.cells[i].left;\n        if (position === this.cells[i].value) {\n          countRight++;\n\n          this.cells[i].element.style.opacity = '0.8'\n        } else {\n          this.cells[i].element.style.opacity = '1'\n        }\n        if (countRight === countCell - 1) {\n          this.cells.forEach(el => el.element.style.opacity = '0.05')\n          clearInterval(this.timerStop);\n\n          const paused = setTimeout(() => {\n            this.winner()\n          }, 2000);\n        }\n      }\n    };\n\n    this.emptyCell.addEventListener(`drop`, drop);\n\n\n    item.element.addEventListener(`dragstart`, (evt) => {\n      evt.target.classList.add(`selected`);\n      setTimeout(() => {\n        evt.target.style.display = 'none'\n      }, 0);\n    });\n\n    item.element.addEventListener(`dragend`, (evt) => {\n      evt.target.classList.remove(`selected`);\n      evt.target.style.display = 'flex'\n    });\n\n    this.field.addEventListener(`dragover`, (evt) => {\n      evt.preventDefault();\n\n    });\n  }\n\n  draw(isNew) {\n    this.steps.textContent = `${this.stepsCounter} шагов`;\n    let countCell = this.size * this.size;\n    this.backgroundImage = `url(images/${Math.floor(1 + Math.random() * 8)}.jpg)`;\n\n    this.empty = {\n      value: this.size * this.size,\n      left: this.size,\n      top: this.size\n    };\n    this.cells = [];\n    this.field.append(this.emptyCell);\n    if (this.kind !== 'kind-digit') {\n      this.field.style.backgroundImage = this.backgroundImage;\n      this.field.style.backgroundSize = 'cover';\n      this.field.style.backgroundColor = 'rgba(255,255,255,0.7)';\n      this.field.style.backgroundBlendMode = 'overlay';\n    }\n    this.emptyCell.style.gridColumnStart = this.empty.left;\n    this.emptyCell.style.gridRowStart = this.empty.top;\n\n    if (isNew) {\n      this.generate();\n      for (let i = 0; i < countCell - 1; i++) {\n        const left = i % this.size + 1;\n        const top = Math.ceil((i + 1) / this.size);\n        const value = this.numbers[i];\n        const cell = new Cell(value, this.field, top, left);\n        this.cells.push({\n          value: value,\n          left: left,\n          top: top,\n          element: this.field.lastChild\n        });\n      }\n    } else {\n      if (this.load) {\n        let save = get('longGame');\n        let saveBgr = get('longTimeStepsBgr')\n        this.field.style.backgroundImage = saveBgr.bgr;\n        this.stepsCounter = saveBgr.steps;\n        this.steps.textContent = `${this.stepsCounter} шагов`;\n        this.timeCounter = saveBgr.times;\n        this.kind = saveBgr.kind;\n        this.empty = get('empty');\n        save.forEach((item) => {\n          const left = item.left;\n          const top = item.top;\n          const value = item.value;\n          const cell = new Cell(value, this.field, top, left);\n          this.cells.push({\n            value: value,\n            left: left,\n            top: top,\n            element: this.field.lastChild\n          });\n        })\n\n      } else {\n        this.numbers = localStorage.getItem('currentGame').split(',');\n        for (let i = 0; i < countCell - 1; i++) {\n          const left = i % this.size + 1;\n          const top = Math.ceil((i + 1) / this.size);\n          const value = this.numbers[i];\n          const cell = new Cell(value, this.field, top, left);\n          this.cells.push({\n            value: value,\n            left: left,\n            top: top,\n            element: this.field.lastChild\n          });\n        }\n      }\n    }\n\n    if (this.kind !== 'kind-digit') {\n      if (this.load) {\n        let saveBgr = get('longTimeStepsBgr')\n        this.field.backgroundImage = saveBgr.bgr;\n        this.backgroundImage = saveBgr.bgr;\n        this.field.style.backgroundSize = 'cover';\n        this.field.style.backgroundColor = 'rgba(255,255,255,0.7)';\n        this.field.style.backgroundBlendMode = 'overlay';\n        this.load = false;\n      }\n      for (let i = 0; i < countCell - 1; i++) {\n        this.cells[i].element.style.backgroundImage = this.backgroundImage;\n        this.cells[i].element.style.backgroundRepiat = 'no-repiat';\n        let value = this.cells[i].value - 1;\n        let persent = 100 / (this.size - 1);\n        this.cells[i].element.style.backgroundPosition = `${value % this.size * persent}% ${Math.floor(value / this.size) * persent}%`;\n      }\n    }\n    if (this.kind === 'kind-img') {\n      for (let i = 0; i < countCell - 1; i++) {\n        this.cells[i].element.style.color = 'transparent'\n      }\n    }\n\n\n    this.setDraggable();\n\n    const move = (item) => {\n      const leftDiff = Math.abs(this.empty.left - item.left);\n      const topDiff = Math.abs(this.empty.top - item.top);\n      const cellMoved = item;\n      let countRight = 0;\n      if (leftDiff + topDiff > 1) {\n        return;\n      } else {\n        const emptyLeft = this.empty.left;\n        const emptyTop = this.empty.top;\n        this.empty.left = cellMoved.left;\n        this.empty.top = cellMoved.top;\n        cellMoved.left = emptyLeft;\n        cellMoved.top = emptyTop;\n        cellMoved.element.style.gridColumnStart = `${emptyLeft}`;\n        cellMoved.element.style.gridRowStart = `${emptyTop}`;\n        this.emptyCell.style.gridColumnStart = this.empty.left;\n        this.emptyCell.style.gridRowStart = this.empty.top;\n        let isSoundOn = isSound();\n        if (isSoundOn) {\n          const audio = document.querySelector('.audio');\n          audio.currentTime = 0;\n          audio.play();\n        }\n\n      }\n\n      for (let i = 0; i < countCell - 1; i++) {\n        let position = (this.cells[i].top - 1) * this.size + this.cells[i].left;\n        if (position === this.cells[i].value) {\n          countRight++;\n          if (this.kind === 'kind-digit') {\n            this.cells[i].element.style.opacity = '0.8'\n          } else {\n            this.cells[i].element.style.opacity = '1'\n          }\n        } else {\n          if (this.kind === 'kind-digit') {\n            this.cells[i].element.style.opacity = '1'\n          } else {\n            this.cells[i].element.style.opacity = '0.8'\n          }\n        }\n        if (countRight === countCell - 1) {\n          this.cells.forEach(el => el.element.style.opacity = '0.05')\n          clearInterval(this.timerStop);\n\n          const paused = setTimeout(() => {\n            this.winner()\n          }, 1000);\n        }\n      }\n      this.step();\n      this.setDraggable();\n\n    }\n\n    this.cells.forEach((item) => item.element.addEventListener('mousedown', () => {\n      this.dragDrop(item);\n    }));\n\n    this.cells.forEach((item) => item.element.addEventListener('mouseup', () => {\n      let leftDiff = this.empty.left - item.left;\n      let topDiff = this.empty.top - item.top;\n\n\n      function animateRight() {\n        move(item);\n        item.element.classList.remove('moveRight')\n        item.element.removeEventListener('transitionend', animateRight);\n      }\n\n      function animateLeft() {\n        move(item);\n        item.element.classList.remove('moveLeft')\n        item.element.removeEventListener('transitionend', animateLeft);\n      }\n\n      function animateDown() {\n        move(item);\n        item.element.classList.remove('moveDown')\n        item.element.removeEventListener('transitionend', animateDown);\n      }\n\n      function animateUp() {\n        move(item);\n        item.element.classList.remove('moveUp')\n        item.element.removeEventListener('transitionend', animateUp);\n      }\n\n      if (leftDiff === 1 && topDiff === 0) {\n        item.element.classList.add('moveRight')\n        item.element.addEventListener('transitionend', animateRight);\n      }\n\n      if (leftDiff === -1 && topDiff === 0) {\n        item.element.classList.add('moveLeft')\n        item.element.addEventListener('transitionend', animateLeft);\n      }\n      if (topDiff === 1 && leftDiff === 0) {\n        item.element.classList.add('moveDown')\n        item.element.addEventListener('transitionend', animateDown);\n      }\n      if (topDiff === -1 && leftDiff === 0) {\n        item.element.classList.add('moveUp')\n        item.element.addEventListener('transitionend', animateUp);\n      }\n\n\n    }));\n\n    this.timerStop = setInterval(() => {\n      this.timer();\n    }, 1000)\n\n    this.record.addEventListener('click', () => {\n      sortrecords()\n    })\n  }\n\n  delete() {\n    this.stepsCounter = 0;\n    this.timeCounter = 0;\n    clearInterval(this.timerStop);\n    while (this.field.firstChild) {\n      this.field.removeChild(this.field.firstChild)\n    }\n  }\n\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Difficulty from './difficulty.js';\n\nexport default function btnlevel(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'уровень', buttons, ['type', 'button']);\n  const main = document.querySelector('main')\n\n  btn.addEventListener('click', () => {\n\n    let popup = new Difficulty(field).init()\n\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js'\n\n\n\nexport default function btnLoad(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'загрузить', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    field.load = true;\n    field.delete()\n\n    let stepsTimes = get('longTimeSteps');\n    let save = get('longGame');\n\n    field.init(Math.sqrt(save.length + 1));\n    field.stepsCounter = stepsTimes.steps;\n    field.timeCounter = stepsTimes.times;\n    field.draw(false);\n  });\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport field from '../main.js';\n\nexport default function btnNewGame(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntNewGame btn', 'новая', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n\n    field.delete()\n    field.draw(true);\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\n\nexport default class RadioInput {\n  constructor(type, name, value, classname, inner, parent) {\n    this.inner = inner;\n    this.name = name;\n    this.value = value;\n    this.type = type;\n    this.classmame = classname;\n    this.parent = parent;\n    this.label = create('label', 'label', `${this.inner}`);\n    this.input = create('input', this.classmame, null, this.label, ['name', this.name], ['type', this.type], ['value', this.value]);\n    this.span = create('span', 'radio', null, this.label)\n  }\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport field from '../main.js';\n\n\nexport default function restart(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntRestart btn', 'повторить', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    field.delete()\n    field.draw(false);\n  })\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport Field from './field.js';\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js';\n\n\nexport default function btnSave(field) {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntCapitulate btn', 'сохранить', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    set('longGame', field.cells);\n    set('empty', field.empty);\n    set('longTimeStepsBgr', {\n      steps: field.stepsCounter,\n      times: field.timeCounter,\n      bgr: field.backgroundImage,\n      kind: field.kind\n    });\n  });\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\nimport {\n  set,\n  get,\n  del\n} from '../utils/storage.js'\n\nexport default function sortrecords() {\n  const main = document.querySelector('main');\n  const popup = create('div', 'dark-screen', create('div', 'popup', create('h2', 'title', 'РЕКОРДЫ')), main)\n  const listRecords = get('records');\n  const recordsWrap = create('div', 'records-wrap');\n  popup.firstChild.append(recordsWrap);\n  let count = 10;\n\n  function byKey(key) {\n    return (a, b) => a[key] > b[key] ? 1 : -1;\n  }\n\n  let sortList = listRecords.sort(byKey('winTime'));\n  const stepTitle = create('div', 'player-step', `ШАГИ:`);\n  const timeTitle = create('div', 'player-time', `ВРЕМЯ:`);\n\n  const title = create('div', 'player-title', [create('div', 'player-name', `ИМЯ:`), create('div', 'player-level', `УРОВЕНЬ:`), stepTitle, timeTitle], recordsWrap)\n\n  sortList.length < 10 ? count = sortList.length : count = 10;\n\n  stepTitle.addEventListener('click', () => {\n    sortList = listRecords.sort(byKey('winStep'));\n    for (let i = 0; i < count; i++) {\n      recordsWrap.lastChild.remove()\n    }\n    for (let i = 0; i < count; i++) {\n      let sec = sortList[i].winTime % 60\n      let min = Math.floor(sortList[i].winTime / 60)\n      const playerName = create('span', 'player-name', `${sortList[i].winName}`)\n      const player = create('div', 'player', [playerName, create('div', 'player-level', `${sortList[i].winLevel}x${sortList[i].winLevel}`), create('div', 'player-step', `${sortList[i].winStep}`), create('div', 'player-time', `${min} : ${sec}`)], recordsWrap)\n    }\n  })\n\n  timeTitle.addEventListener('click', () => {\n    sortList = listRecords.sort(byKey('winTime'));\n    for (let i = 0; i < count; i++) {\n      recordsWrap.lastChild.remove()\n    }\n    for (let i = 0; i < count; i++) {\n      let sec = sortList[i].winTime % 60\n      let min = Math.floor(sortList[i].winTime / 60)\n      const playerName = create('span', 'player-name', `${sortList[i].winName}`)\n      const player = create('div', 'player', [playerName, create('div', 'player-level', `${sortList[i].winLevel}x${sortList[i].winLevel}`), create('div', 'player-step', `${sortList[i].winStep}`), create('div', 'player-time', `${min} : ${sec}`)], recordsWrap)\n    }\n  })\n\n\n  for (let i = 0; i < count; i++) {\n    let sec = sortList[i].winTime % 60\n    let min = Math.floor(sortList[i].winTime / 60)\n    const playerName = create('span', 'player-name', `${sortList[i].winName}`)\n    const player = create('div', 'player', [playerName, create('div', 'player-level', `${sortList[i].winLevel}x${sortList[i].winLevel}`), create('div', 'player-step', `${sortList[i].winStep}`), create('div', 'player-time', `${min} : ${sec}`)], recordsWrap)\n  }\n\n  let btnclose = create('button', 'close-btn', create('span', 'visually-hidden', close), null, ['type', 'button']);\n  popup.firstChild.append(btnclose);\n\n  function closePopup(popup) {\n    popup.remove();\n  }\n\n  btnclose.addEventListener('click', () => {\n    closePopup(popup);\n  });\n}\n","/* eslint-disable import/extensions */\nimport create from '../utils/create.js';\n\nlet sound = true;\n\nfunction btnSound() {\n  const buttons = document.querySelector('.buttons');\n  const btn = create('button', 'bntSound btn', 'звук выкл', buttons, ['type', 'button']);\n\n  btn.addEventListener('click', () => {\n    if (sound) {\n      sound = !sound;\n      btn.textContent = 'звук вкл'\n    } else {\n      sound = !sound;\n      btn.textContent = 'звук выкл'\n    }\n  })\n}\n\nfunction isSound() {\n  return sound;\n}\n\nexport {\n  btnSound,\n  isSound\n};\n","/* eslint-disable import/extensions */\nimport Field from './blocks/field.js';\nimport create from './utils/create.js';\nimport btnNewGame from './blocks/newgame.js';\nimport btnRestart from './blocks/restart.js';\nimport btnCapitulate from './blocks/capitulate.js';\nimport btnAddition from './blocks/addition.js';\nimport RadioInput from './blocks/radiobtn.js';\nimport Difficulty from './blocks/difficulty.js';\n\nconst START_SIZE = 4;\nconst isNew = true\n\nconst main = create('main', '', create('h1', 'title', 'Gem Puzzle'));\ndocument.body.prepend(main);\n\nconst fieldWrap = create('div', 'field-wrap', null, main);\n\nlet field = new Field(START_SIZE);\n\nconst buttons = create('div', 'buttons', null, main);\nbtnNewGame(field);\nbtnRestart(field);\nbtnCapitulate(field)\nbtnAddition(field)\n\n\nmain.append(fieldWrap);\n\nfield.init();\nfield.draw(isNew);\n","/**\n * @param {String} el\n * @param {String} classNames\n * @param {HTMLElement} child\n * @param {HTMLElement} parent\n * @param  {...array} dataAttr\n */\n\nexport default function create(el, classNames, child, parent, ...dataAttr) {\n  let element = null;\n  try {\n    element = document.createElement(el);\n  } catch (error) {\n    throw new Error('Unable to create HTMLElement! Give a proper tag name');\n  }\n\n  if (classNames) element.classList.add(...classNames.split(' ')); // \"class1 class2 class3\"\n\n  if (child && Array.isArray(child)) {\n    child.forEach((childElement) => childElement && element.appendChild(childElement));\n  } else if (child && typeof child === 'object') {\n    element.appendChild(child);\n  } else if (child && typeof child === 'string') {\n    element.innerHTML = child;\n  }\n\n  if (parent) {\n    parent.appendChild(element);\n  }\n\n  if (dataAttr.length) {\n    dataAttr.forEach(([attrName, attrValue]) => {\n      if (attrValue === '') {\n        element.setAttribute(attrName, '');\n      }\n      if (attrName.match(/value|id|type|name|placeholder|cols|rows|autocorrect|spellcheck/)) {\n        element.setAttribute(attrName, attrValue);\n      } else {\n        element.dataset[attrName] = attrValue;\n      }\n    });\n  }\n  return element;\n}\n","export function set(name, value) {\n  window.localStorage.setItem(name, JSON.stringify(value));\n}\n\nexport function get(name, subst = null) {\n  return JSON.parse(window.localStorage.getItem(name) || subst);\n}\n\nexport function del(name) {\n  localStorage.removeItem(name);\n}\n"],"sourceRoot":""}